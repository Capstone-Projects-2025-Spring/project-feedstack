"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[1559],{24727:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var i=t(74848),s=t(28453);const r={sidebar_position:3},o="Acceptance test for Feedstack",c={id:"testing/acceptence-testing",title:"Acceptance test for Feedstack",description:"Introduction",source:"@site/docs/testing/acceptence-testing.md",sourceDirName:"testing",slug:"/testing/acceptence-testing",permalink:"/project-feedstack/docs/testing/acceptence-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-feedstack/edit/main/documentation/docs/testing/acceptence-testing.md",tags:[],version:"current",lastUpdatedBy:"Random76520",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Integration Tests for Feedstack Project",permalink:"/project-feedstack/docs/testing/integration-testing"}},a={},l=[{value:"Introduction",id:"introduction",level:2},{value:"<strong>Continual Integration(CI)</strong>",id:"continual-integrationci",level:2},{value:"Implimentation:",id:"implimentation",level:3},{value:"1. User Login and Upload",id:"1-user-login-and-upload",level:2},{value:"2. Chatbot Feedback Interaction",id:"2-chatbot-feedback-interaction",level:2},{value:"3. Theme Detection and Accordion Generation",id:"3-theme-detection-and-accordion-generation",level:2},{value:"4. Highlighted Keywords",id:"4-highlighted-keywords",level:2}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"acceptance-test-for-feedstack",children:"Acceptance test for Feedstack"}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["Acceptence testing in Feedstack assesses the project for all functional & nonfunctional requirements. Using a production-like environment, all system components are evaluated in a ",(0,i.jsx)(n.strong,{children:"Continual Integration"})," pipeline. Powered by ",(0,i.jsx)(n.em,{children:"Docker"})," and ",(0,i.jsx)(n.em,{children:"Jenkins"}),", automation of the execution of acceptance-testing provides insighht into real-time application behavior to reliably deliver updates."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"continual-integrationci",children:(0,i.jsx)(n.strong,{children:"Continual Integration(CI)"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose:"}),"\nThe ",(0,i.jsx)(n.strong,{children:"GitHub hook trigger for GITScm polling"})," in Jenkins listens for push events from GitHub, ensuring that the pipeline automatically runs as soon as a change is pushed to the repository, keeping the integration process seamless and continuous."]}),"\n",(0,i.jsx)(n.h3,{id:"implimentation",children:"Implimentation:"}),"\n",(0,i.jsx)(n.p,{children:"When Jenkins receives a GitHub push hook, GitHub Plugin checks to see whether the hook came from a GitHub repository which matches the Git repository defined in SCM/Git section of this job. If they match and this option is enabled, GitHub Plugin triggers a one-time polling on GITScm."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"###Groovy Pipeline Script"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",children:"pipeline {\n    agent any\n    stages {\n        stage('Checkout') {\n            steps {\n                // Clone the GitHub repository\n                git branch: 'JonWorking', url: 'https://github.com/Capstone-Projects-2025-Spring/project-feedstack.git'\n            }\n        }\n        \n        stage('Install Dependencies') {\n            steps {\n                dir('Feedstack') {\n                    sh 'pip install -r requirements.txt' // Install dependencies\n                }\n            }\n        }\n\n        stage('Run Unit Tests') {\n            steps {\n                dir('Feedstack') {\n                    sh 'pytest unit_test.py --junitxml=test-results.xml' //python testing\n                }\n            }\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"1-user-login-and-upload",children:"1. User Login and Upload"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Test Cases:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"User can successfully log in using an ID."}),"\n",(0,i.jsx)(n.li,{children:"User is blocked from uploading without logging in."}),"\n",(0,i.jsx)(n.li,{children:"After login, user is prompted to upload a design image."}),"\n",(0,i.jsx)(n.li,{children:"System accepts supported image formats (e.g., JPG, PNG)."}),"\n",(0,i.jsx)(n.li,{children:"Uploaded image is displayed clearly on the left-hand side."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-chatbot-feedback-interaction",children:"2. Chatbot Feedback Interaction"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Test Cases:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Chatbot generates accurate and context-aware feedback after a user query."}),"\n",(0,i.jsx)(n.li,{children:"Chat interface accepts multiline input and handles long queries."}),"\n",(0,i.jsx)(n.li,{children:"GPT-4o API returns feedback within an acceptable response time."}),"\n",(0,i.jsx)(n.li,{children:"Feedback refers to specific design elements in the uploaded image."}),"\n",(0,i.jsx)(n.li,{children:"No hallucinations or feedback errors occur under normal use."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"3-theme-detection-and-accordion-generation",children:"3. Theme Detection and Accordion Generation"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Test Cases:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Each chatbot response is correctly analyzed for design themes (Accessibility, Visual Hierarchy, etc.)."}),"\n",(0,i.jsx)(n.li,{children:"Accurate accordion is generated with the right theme title."}),"\n",(0,i.jsx)(n.li,{children:"Clicking the accordion displays the corresponding feedback summary."}),"\n",(0,i.jsx)(n.li,{children:"Multiple feedback instances under the same theme are listed correctly with summaries."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"4-highlighted-keywords",children:"4. Highlighted Keywords"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Test Cases:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Key design-related terms are correctly highlighted in the chatbot response."}),"\n",(0,i.jsx)(n.li,{children:"All keywords under each accordion are listed below it accurately."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(96540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);