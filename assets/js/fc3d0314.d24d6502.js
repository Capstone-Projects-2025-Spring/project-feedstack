"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[1559],{24727:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var i=n(74848),s=n(28453);const o={sidebar_position:3},r="Acceptance test for Feedstack",c={id:"testing/acceptence-testing",title:"Acceptance test for Feedstack",description:"Introduction",source:"@site/docs/testing/acceptence-testing.md",sourceDirName:"testing",slug:"/testing/acceptence-testing",permalink:"/project-feedstack/docs/testing/acceptence-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-feedstack/edit/main/documentation/docs/testing/acceptence-testing.md",tags:[],version:"current",lastUpdatedBy:"Random76520",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Integration Tests for Feedstack Project",permalink:"/project-feedstack/docs/testing/integration-testing"}},a={},d=[{value:"Introduction",id:"introduction",level:2},{value:"<strong>Continual Integration(CI)</strong>",id:"continual-integrationci",level:2},{value:"Implimentation:",id:"implimentation",level:3}];function l(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"acceptance-test-for-feedstack",children:"Acceptance test for Feedstack"}),"\n",(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(t.p,{children:["Acceptence testing in Feedstack assesses the project for all functional & nonfunctional requirements. Using a production-like environment, all system components are evaluated in a ",(0,i.jsx)(t.strong,{children:"Continual Integration"})," pipeline. Powered by ",(0,i.jsx)(t.em,{children:"Docker"})," and ",(0,i.jsx)(t.em,{children:"Jenkins"}),", automation of the execution of acceptance-testing provides insighht into real-time application behavior to reliably deliver updates."]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"continual-integrationci",children:(0,i.jsx)(t.strong,{children:"Continual Integration(CI)"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Purpose:"}),"\nThe ",(0,i.jsx)(t.strong,{children:"GitHub hook trigger for GITScm polling"})," in Jenkins listens for push events from GitHub, ensuring that the pipeline automatically runs as soon as a change is pushed to the repository, keeping the integration process seamless and continuous."]}),"\n",(0,i.jsx)(t.h3,{id:"implimentation",children:"Implimentation:"}),"\n",(0,i.jsx)(t.p,{children:"When Jenkins receives a GitHub push hook, GitHub Plugin checks to see whether the hook came from a GitHub repository which matches the Git repository defined in SCM/Git section of this job. If they match and this option is enabled, GitHub Plugin triggers a one-time polling on GITScm."}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.p,{children:"###Groovy Pipeline Script"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-groovy",children:"pipeline {\n    agent any\n    stages {\n        stage('Checkout') {\n            steps {\n                // Clone the GitHub repository\n                git branch: 'JonWorking', url: 'https://github.com/Capstone-Projects-2025-Spring/project-feedstack.git'\n            }\n        }\n        \n        stage('Install Dependencies') {\n            steps {\n                dir('Feedstack') {\n                    sh 'pip install -r requirements.txt' // Install dependencies\n                }\n            }\n        }\n\n        stage('Run Unit Tests') {\n            steps {\n                dir('Feedstack') {\n                    sh 'pytest unit_test.py --junitxml=test-results.xml' //python testing\n                }\n            }\n        }\n    }\n}\n"})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var i=n(96540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);