"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[5968],{79563:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/project-feedstack/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Requirements Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"System Overview","href":"/project-feedstack/docs/requirements/system-overview","docId":"requirements/system-overview","unlisted":false},{"type":"link","label":"System Block Diagram","href":"/project-feedstack/docs/requirements/system-block-diagram","docId":"requirements/system-block-diagram","unlisted":false},{"type":"link","label":"General Requirements","href":"/project-feedstack/docs/requirements/general-requirements","docId":"requirements/general-requirements","unlisted":false},{"type":"link","label":"Functional Requirements","href":"/project-feedstack/docs/requirements/features-and-requirements","docId":"requirements/features-and-requirements","unlisted":false},{"type":"link","label":"User Personas & Use Cases","href":"/project-feedstack/docs/requirements/use-case-descriptions","docId":"requirements/use-case-descriptions","unlisted":false}],"href":"/project-feedstack/docs/category/requirements-specification"},{"type":"category","label":"System Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Feedstack Architecture","href":"/project-feedstack/docs/system-architecture/Design","docId":"system-architecture/Design","unlisted":false},{"type":"link","label":"Algorithms & AI Model Explanation","href":"/project-feedstack/docs/system-architecture/AI & ML","docId":"system-architecture/AI & ML","unlisted":false},{"type":"link","label":"Logging","href":"/project-feedstack/docs/system-architecture/Logging","docId":"system-architecture/Logging","unlisted":false},{"type":"link","label":"Version Control","href":"/project-feedstack/docs/system-architecture/Version Control","docId":"system-architecture/Version Control","unlisted":false},{"type":"link","label":"Class Diagrams","href":"/project-feedstack/docs/system-architecture/Class Diagrams","docId":"system-architecture/Class Diagrams","unlisted":false},{"type":"link","label":"Sequence Diagrams","href":"/project-feedstack/docs/system-architecture/Sequence Diagrams","docId":"system-architecture/Sequence Diagrams","unlisted":false},{"type":"link","label":"ER Diagrams","href":"/project-feedstack/docs/system-architecture/ER Diagrams","docId":"system-architecture/ER Diagrams","unlisted":false},{"type":"link","label":"Development Environment","href":"/project-feedstack/docs/system-architecture/Development Environment","docId":"system-architecture/Development Environment","unlisted":false}],"href":"/project-feedstack/docs/category/system-architecture"},{"type":"category","label":"API Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Design Document - Part II API","href":"/project-feedstack/docs/api-specification/design-api-intro","docId":"api-specification/design-api-intro","unlisted":false},{"type":"link","label":"API 1 - Swagger Petstore","href":"/project-feedstack/docs/api-specification/openapi-spec","docId":"api-specification/openapi-spec","unlisted":false},{"type":"link","label":"Feedstack API - Class Documentation","href":"/project-feedstack/docs/api-specification/calculator-model-generated","docId":"api-specification/calculator-model-generated","unlisted":false}],"href":"/project-feedstack/docs/category/api-specification"},{"type":"category","label":"Test Procedures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unit Tests for Feedstack","href":"/project-feedstack/docs/testing/unit-testing","docId":"testing/unit-testing","unlisted":false},{"type":"link","label":"Integration Tests for Feedstack Project","href":"/project-feedstack/docs/testing/integration-testing","docId":"testing/integration-testing","unlisted":false},{"type":"link","label":"Acceptance test","href":"/project-feedstack/docs/testing/acceptence-testing","docId":"testing/acceptence-testing","unlisted":false}],"href":"/project-feedstack/docs/category/test-procedures"}]},"docs":{"api-specification/calculator-model-generated":{"id":"api-specification/calculator-model-generated","title":"Feedstack API - Class Documentation","description":"Class: Participant","sidebar":"docsSidebar"},"api-specification/design-api-intro":{"id":"api-specification/design-api-intro","title":"Design Document - Part II API","description":"What should be in this section.","sidebar":"docsSidebar"},"api-specification/openapi-spec":{"id":"api-specification/openapi-spec","title":"API 1 - Swagger Petstore","description":"API Specification from openapi.yml","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Feedstack is an AI-powered design feedback system that provides structured insights on uploaded designs. It analyzes elements such as accessibility, usability, color contrast, and visual hierarchy to assist designers in refining their work. Users can interact with the AI chatbot, receive categorized feedback, and navigate efficiently using bookmarks and themed accordions that include definitions, relations, and key design terms.","sidebar":"docsSidebar"},"requirements/features-and-requirements":{"id":"requirements/features-and-requirements","title":"Functional Requirements","description":"1. AI Feedback Generation","sidebar":"docsSidebar"},"requirements/general-requirements":{"id":"requirements/general-requirements","title":"General Requirements","description":"* The development process is managed using GitHub for version control.","sidebar":"docsSidebar"},"requirements/system-block-diagram":{"id":"requirements/system-block-diagram","title":"System Block Diagram","description":"diagram-4","sidebar":"docsSidebar"},"requirements/system-overview":{"id":"requirements/system-overview","title":"System Overview","description":"Abstract","sidebar":"docsSidebar"},"requirements/use-case-descriptions":{"id":"requirements/use-case-descriptions","title":"User Personas & Use Cases","description":"User Persona 1","sidebar":"docsSidebar"},"system-architecture/AI & ML":{"id":"system-architecture/AI & ML","title":"Algorithms & AI Model Explanation","description":"Feedstack leverages AI-powered analysis to provide structured, actionable feedback on visual designs. Two core AI components drive this process:","sidebar":"docsSidebar"},"system-architecture/Class Diagrams":{"id":"system-architecture/Class Diagrams","title":"Class Diagrams","description":"diagram-9","sidebar":"docsSidebar"},"system-architecture/Design":{"id":"system-architecture/Design","title":"Feedstack Architecture","description":"Purpose","sidebar":"docsSidebar"},"system-architecture/Development Environment":{"id":"system-architecture/Development Environment","title":"Development Environment","description":"Tools","sidebar":"docsSidebar"},"system-architecture/ER Diagrams":{"id":"system-architecture/ER Diagrams","title":"ER Diagrams","description":"Database Design and Entity Relationship Diagrams","sidebar":"docsSidebar"},"system-architecture/Logging":{"id":"system-architecture/Logging","title":"Logging","description":"Logging is an essential component of our research, allowing us to track user interactions and system events in a structured manner. Our goal is to keep logs as simple and lightweight as possible while capturing the necessary details to analyze user behavior and system performance effectively.","sidebar":"docsSidebar"},"system-architecture/Sequence Diagrams":{"id":"system-architecture/Sequence Diagrams","title":"Sequence Diagrams","description":"Sequence Diagrams","sidebar":"docsSidebar"},"system-architecture/Version Control":{"id":"system-architecture/Version Control","title":"Version Control","description":"Overview","sidebar":"docsSidebar"},"testing/acceptence-testing":{"id":"testing/acceptence-testing","title":"Acceptance test","description":"Demonstration of all of the functional and non-functional requirements. This can be a combination of automated tests derived from the use-cases (user stories) and manual tests with recorded observation of the results.","sidebar":"docsSidebar"},"testing/integration-testing":{"id":"testing/integration-testing","title":"Integration Tests for Feedstack Project","description":"Introduction","sidebar":"docsSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit Tests for Feedstack","description":"Unit testing is a critical component of software development, ensuring that individual components of the application function correctly. This document outlines the unit tests implemented for Feedstack.The tests validate the integrity of the Participant Model, DesignUpload Model, and various API endpoints within the application.","sidebar":"docsSidebar"}}}}')}}]);